<!--
    Copyright Â© 2016 - 2021 Stefan Berg <isbeorn86+NINA@googlemail.com> and the N.I.N.A. contributors

    This file is part of N.I.N.A. - Nighttime Imaging 'N' Astronomy.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.-->
<UserControl
    x:Class="NINA.View.OverView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dock="https://github.com/Dirkster99/AvalonDock"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:NINA.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ninactrl="clr-namespace:NINACustomControlLibrary;assembly=NINACustomControlLibrary"
    xmlns:ns="clr-namespace:NINA.Core.Locale;assembly=NINA.Core"
    xmlns:util="clr-namespace:NINA.Utility.AvalonDock"
    xmlns:view="clr-namespace:NINA.View"
    xmlns:vm="clr-namespace:NINA.ViewModel"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">

    <UserControl.Resources>
        <dock:BoolToVisibilityConverter x:Key="btvc" />
        <util:PaneTemplateSelector x:Key="TemplateSelector">
            <util:PaneTemplateSelector.CameraTemplate>
                <DataTemplate>
                    <view:AnchorableCameraView />
                </DataTemplate>
            </util:PaneTemplateSelector.CameraTemplate>

            <util:PaneTemplateSelector.TelescopeTemplate>
                <DataTemplate>
                    <view:AnchorableTelescopeView />
                </DataTemplate>
            </util:PaneTemplateSelector.TelescopeTemplate>

            <util:PaneTemplateSelector.DomeTemplate>
                <DataTemplate>
                    <view:AnchorableDomeView />
                </DataTemplate>
            </util:PaneTemplateSelector.DomeTemplate>

            <util:PaneTemplateSelector.ImageControlTemplate>
                <DataTemplate>
                    <view:ImageControlView />
                </DataTemplate>
            </util:PaneTemplateSelector.ImageControlTemplate>

            <util:PaneTemplateSelector.ThumbnailTemplate>
                <DataTemplate>
                    <view:ThumbnailListView />
                </DataTemplate>
            </util:PaneTemplateSelector.ThumbnailTemplate>

            <util:PaneTemplateSelector.FocusTargetsTemplate>
                <DataTemplate>
                    <view:AnchorableFocusTargetsView />
                </DataTemplate>
            </util:PaneTemplateSelector.FocusTargetsTemplate>

            <util:PaneTemplateSelector.PlatesolveTemplate>
                <DataTemplate>
                    <view:AnchorablePlateSolveView />
                </DataTemplate>
            </util:PaneTemplateSelector.PlatesolveTemplate>

            <util:PaneTemplateSelector.PolarAlignmentTemplate>
                <DataTemplate>
                    <view:AnchorablePolarAlignmentView />
                </DataTemplate>
            </util:PaneTemplateSelector.PolarAlignmentTemplate>

            <util:PaneTemplateSelector.GuiderTemplate>
                <DataTemplate>
                    <view:AnchorableGuiderView />
                </DataTemplate>
            </util:PaneTemplateSelector.GuiderTemplate>

            <util:PaneTemplateSelector.FilterWheelTemplate>
                <DataTemplate>
                    <view:AnchorableFilterWheelView />
                </DataTemplate>
            </util:PaneTemplateSelector.FilterWheelTemplate>

            <util:PaneTemplateSelector.ImagingTemplate>
                <DataTemplate>
                    <view:AnchorableCameraControlView />
                </DataTemplate>
            </util:PaneTemplateSelector.ImagingTemplate>

            <util:PaneTemplateSelector.ImageHistoryTemplate>
                <DataTemplate>
                    <view:AnchorableImageHistoryView />
                </DataTemplate>
            </util:PaneTemplateSelector.ImageHistoryTemplate>

            <util:PaneTemplateSelector.ImageStatisticsTemplate>
                <DataTemplate>
                    <view:AnchorableImageStatisticsView />
                </DataTemplate>
            </util:PaneTemplateSelector.ImageStatisticsTemplate>

            <util:PaneTemplateSelector.SequenceTemplate>
                <DataTemplate>
                    <view:AnchorableSequenceNavigationView />
                </DataTemplate>
            </util:PaneTemplateSelector.SequenceTemplate>

            <util:PaneTemplateSelector.RotatorTemplate>
                <DataTemplate>
                    <view:AnchorableRotatorView />
                </DataTemplate>
            </util:PaneTemplateSelector.RotatorTemplate>

            <util:PaneTemplateSelector.SafetyMonitorTemplate>
                <DataTemplate>
                    <view:AnchorableSafetyMonitorView />
                </DataTemplate>
            </util:PaneTemplateSelector.SafetyMonitorTemplate>

            <util:PaneTemplateSelector.WeatherDataTemplate>
                <DataTemplate>
                    <view:AnchorableWeatherDataView />
                </DataTemplate>
            </util:PaneTemplateSelector.WeatherDataTemplate>

            <util:PaneTemplateSelector.FocuserTemplate>
                <DataTemplate>
                    <view:AnchorableFocuserView />
                </DataTemplate>
            </util:PaneTemplateSelector.FocuserTemplate>

            <util:PaneTemplateSelector.AutoFocusTemplate>
                <DataTemplate>
                    <view:AnchorableAutoFocusView />
                </DataTemplate>
            </util:PaneTemplateSelector.AutoFocusTemplate>

            <util:PaneTemplateSelector.SwitchTemplate>
                <DataTemplate>
                    <view:AnchorableSwitchHubView />
                </DataTemplate>
            </util:PaneTemplateSelector.SwitchTemplate>

            <util:PaneTemplateSelector.FlatDeviceTemplate>
                <DataTemplate>
                    <view:AnchorableFlatDeviceView />
                </DataTemplate>
            </util:PaneTemplateSelector.FlatDeviceTemplate>

            <util:PaneTemplateSelector.ExposureCalculatorTemplate>
                <DataTemplate>
                    <view:AnchorableExposureTimeRecommendationView />
                </DataTemplate>
            </util:PaneTemplateSelector.ExposureCalculatorTemplate>
        </util:PaneTemplateSelector>
    </UserControl.Resources>
    <Grid>
        <Grid Visibility="{Binding LoadAvalonDockLayoutCommand.Execution.IsCompleted, Converter={StaticResource InverseBooleanToVisibilityCollapsedConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="1" Orientation="Vertical">
                <ninactrl:LoadingControl
                    Width="50"
                    Height="50"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    LoadingImageBrush="{StaticResource PrimaryBrush}" />
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="20"
                    Text="{ns:Loc LblInitializingLayout}" />
            </StackPanel>
        </Grid>
        <Grid Background="{StaticResource TertiaryBackgroundBrush}" Visibility="{Binding LoadAvalonDockLayoutCommand.Execution.IsCompleted, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid
                    Margin="2,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ItemsControl ItemsSource="{Binding AnchorableInfoPanels}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ToggleButton
                                    Width="30"
                                    Height="30"
                                    Margin="2.5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Command="{Binding HideCommand}"
                                    IsChecked="{Binding IsVisible, Mode=OneWay}">
                                    <ToggleButton.ToolTip>
                                        <TextBlock Text="{Binding Title}" />
                                    </ToggleButton.ToolTip>
                                    <ToggleButton.Style>
                                        <Style BasedOn="{StaticResource AvalonSideBarToggleButton}" TargetType="ToggleButton">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Path
                                                                Margin="5"
                                                                Data="{Binding ImageGeometry}"
                                                                Stretch="Uniform" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Path
                                                                Margin="5"
                                                                Data="{Binding ImageGeometry}"
                                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                                Stretch="Uniform" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="False">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Path
                                                                Margin="5"
                                                                Data="{Binding ImageGeometry}"
                                                                Fill="{StaticResource ButtonForegroundDisabledBrush}"
                                                                Stretch="Uniform" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <TextBlock
                        Grid.Column="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="{StaticResource ButtonForegroundBrush}"
                        Text="{ns:Loc LblInfo}"
                        TextAlignment="Center" />
                </Grid>
                <Grid
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="{StaticResource ButtonForegroundBrush}"
                        Text="{ns:Loc LblTools}"
                        TextAlignment="Center" />
                    <ItemsControl Grid.Column="1" ItemsSource="{Binding AnchorableTools}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel FlowDirection="RightToLeft" Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ToggleButton
                                    Width="30"
                                    Height="30"
                                    Margin="2.5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Command="{Binding HideCommand}"
                                    IsChecked="{Binding IsVisible, Mode=OneWay}">
                                    <ToggleButton.ToolTip>
                                        <TextBlock Text="{Binding Title}" />
                                    </ToggleButton.ToolTip>
                                    <ToggleButton.Style>
                                        <Style BasedOn="{StaticResource AvalonSideBarToggleButton}" TargetType="ToggleButton">
                                            <Style.Triggers>
                                                <!--
                                                    The render transform sections here are necessary due to the flow direction of the wrap panel.
                                                    When a flow direction of right to left is specified the content will be flipped too.
                                                    The render transform will flip it back to its original orientation.
                                                -->
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Path
                                                                Margin="5"
                                                                Data="{Binding ImageGeometry}"
                                                                RenderTransformOrigin="0.5,0.5"
                                                                Stretch="Uniform">
                                                                <Path.RenderTransform>
                                                                    <ScaleTransform ScaleX="-1" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Path
                                                                Margin="5"
                                                                Data="{Binding ImageGeometry}"
                                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                                RenderTransformOrigin="0.5,0.5"
                                                                Stretch="Uniform">
                                                                <Path.RenderTransform>
                                                                    <ScaleTransform ScaleX="-1" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="False">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Path
                                                                Margin="5"
                                                                Data="{Binding ImageGeometry}"
                                                                Fill="{StaticResource ButtonForegroundDisabledBrush}"
                                                                RenderTransformOrigin="0.5,0.5"
                                                                Stretch="Uniform">
                                                                <Path.RenderTransform>
                                                                    <ScaleTransform ScaleX="-1" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Grid>
            <dock:DockingManager
                x:Name="dockManager"
                Grid.Row="1"
                Margin="1,0,0,0"
                AnchorablesSource="{Binding Anchorables}"
                DataContext="{Binding}"
                LayoutItemTemplateSelector="{StaticResource TemplateSelector}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding LoadAvalonDockLayoutCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dock:DockingManager}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <dock:DockingManager.LayoutItemContainerStyleSelector>
                    <util:PaneStyleSelector>
                        <util:PaneStyleSelector.AnchorableStyle>
                            <Style TargetType="{x:Type dock:LayoutAnchorableItem}">
                                <Setter Property="Title" Value="{Binding Model.Title}" />
                                <Setter Property="HideCommand" Value="{Binding Model.HideCommand}" />
                                <Setter Property="Visibility" Value="{Binding Model.IsVisible, ConverterParameter={x:Static Visibility.Hidden}, Converter={StaticResource btvc}, Mode=TwoWay}" />
                                <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
                                <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                            </Style>
                        </util:PaneStyleSelector.AnchorableStyle>
                    </util:PaneStyleSelector>
                </dock:DockingManager.LayoutItemContainerStyleSelector>

                <dock:DockingManager.LayoutUpdateStrategy>
                    <util:LayoutInitializer />
                </dock:DockingManager.LayoutUpdateStrategy>

                <dock:LayoutRoot>
                    <dock:LayoutPanel Orientation="Horizontal">
                        <dock:LayoutAnchorablePane Name="ToolsPane" DockWidth="*" />
                    </dock:LayoutPanel>
                </dock:LayoutRoot>
            </dock:DockingManager>
        </Grid>
    </Grid>
</UserControl>