<!--
    Copyright Â© 2016 - 2021 Stefan Berg <isbeorn86+NINA@googlemail.com> and the N.I.N.A. contributors

    This file is part of N.I.N.A. - Nighttime Imaging 'N' Astronomy.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.-->
<UserControl
    x:Class="NINA.View.FramingAssistantView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:alt="clr-namespace:NINA.WPF.Base.View;assembly=NINA.WPF.Base"
    xmlns:behaviors="clr-namespace:NINA.WPF.Base.Behaviors;assembly=NINA.WPF.Base"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:NINA.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ninactrl="clr-namespace:NINACustomControlLibrary;assembly=NINACustomControlLibrary"
    xmlns:ns="clr-namespace:NINA.Core.Locale;assembly=NINA.Core"
    xmlns:rules="clr-namespace:NINA.Core.Utility.ValidationRules;assembly=NINA.Core"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:survey="clr-namespace:NINA.Core.Enum;assembly=NINA.Core"
    xmlns:util="clr-namespace:NINA.Core.Utility;assembly=NINA.Core"
    xmlns:wpfbase="clr-namespace:NINA.WPF.Base.View;assembly=NINA.WPF.Base"
    xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit"
    x:Name="UC"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="8*" />
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <util:BindingProxy x:Key="Context" Data="{Binding}" />
            <util:BindingProxy x:Key="nighttimeProxy" Data="{Binding NighttimeData}" />
        </Grid.Resources>
        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Vertical">
                    <GroupBox Header="{ns:Loc LblImageSource}">
                        <StackPanel Orientation="Vertical">
                            <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0">
                                <UniformGrid
                                    Margin="0,6,0,6"
                                    VerticalAlignment="Center"
                                    Columns="2">
                                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblImageSource}" />
                                    <ComboBox
                                        x:Name="PART_FramingAssistantSource"
                                        Margin="10,0,0,0"
                                        ItemsSource="{Binding Source={util:EnumBindingSource {x:Type survey:SkySurveySource}}}"
                                        SelectedItem="{Binding FramingAssistantSource}" />
                                </UniformGrid>
                            </Border>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="40" />
                                </Grid.RowDefinitions>
                                <ListView
                                    MaxHeight="250"
                                    Margin="0,5,0,0"
                                    ItemsSource="{Binding Path=ImageCacheInfo.Elements[Image]}"
                                    SelectedItem="{Binding SelectedImageCacheInfo}"
                                    SelectionMode="Single">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn
                                                Width="Auto"
                                                DisplayMemberBinding="{Binding Path=Attribute[Name].Value}"
                                                Header="{ns:Loc LblName}" />
                                            <GridViewColumn
                                                Width="Auto"
                                                DisplayMemberBinding="{Binding Path=Attribute[RA].Value, Converter={StaticResource HoursToHMSConverter}}"
                                                Header="{ns:Loc LblRA}" />
                                            <GridViewColumn
                                                Width="Auto"
                                                DisplayMemberBinding="{Binding Path=Attribute[Dec].Value, Converter={StaticResource DegreesToDMSConverter}}"
                                                Header="{ns:Loc LblDec}" />
                                            <GridViewColumn
                                                Width="Auto"
                                                DisplayMemberBinding="{Binding Path=Attribute[Source].Value}"
                                                Header="{ns:Loc LblSource}" />
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                                <Button
                                    Grid.Row="1"
                                    Height="25"
                                    Margin="5"
                                    HorizontalAlignment="Stretch"
                                    Command="{Binding ClearCacheCommand}">
                                    <TextBlock
                                        Foreground="{StaticResource ButtonForegroundBrush}"
                                        Text="{ns:Loc LblClearCache}"
                                        TextWrapping="Wrap" />
                                </Button>
                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=PART_FramingAssistantSource, Path=SelectedItem}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=PART_FramingAssistantSource, Path=SelectedItem}" Value="1">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=PART_FramingAssistantSource, Path=SelectedItem}" Value="2">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=PART_FramingAssistantSource, Path=SelectedItem}" Value="3">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=PART_FramingAssistantSource, Path=SelectedItem}" Value="4">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=PART_FramingAssistantSource, Path=SelectedItem}" Value="5">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=PART_FramingAssistantSource, Path=SelectedItem}" Value="6">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox>
                        <GroupBox.Header>
                            <DockPanel>
                                <TextBlock
                                    DockPanel.Dock="Left"
                                    FontSize="20"
                                    Text="{ns:Loc LblCoordinates}" />
                                <Button
                                    Width="25"
                                    Height="25"
                                    Margin="1,0,0,0"
                                    HorizontalAlignment="Right"
                                    HorizontalContentAlignment="Right"
                                    Command="{Binding CoordsFromPlanetariumCommand}"
                                    DockPanel.Dock="Right">
                                    <Button.ToolTip>
                                        <ToolTip ToolTipService.ShowOnDisabled="False">
                                            <TextBlock Text="{ns:Loc LblPlanetariumTooltip}" />
                                        </ToolTip>
                                    </Button.ToolTip>
                                    <Grid>
                                        <Path
                                            Margin="5"
                                            Data="{StaticResource GetCoordsSVG}"
                                            Fill="{StaticResource ButtonForegroundBrush}"
                                            Stretch="Uniform" />
                                    </Grid>
                                </Button>
                            </DockPanel>
                        </GroupBox.Header>
                        <StackPanel Orientation="Vertical">
                            <UniformGrid
                                Margin="0,6,0,6"
                                VerticalAlignment="Center"
                                Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblName}" />
                                <ninactrl:AutoCompleteBox
                                    Margin="5,0,0,0"
                                    VerticalAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Foreground="{StaticResource PrimaryBrush}"
                                    HintText="{ns:Loc LblObjectNameHint}"
                                    PopupBackground="{StaticResource TertiaryBackgroundBrush}"
                                    SearchResult="{Binding DeepSkyObjectSearchVM.TargetSearchResult.Result}"
                                    SelectedSearchResult="{Binding DeepSkyObjectSearchVM.SelectedTargetSearchResult, Mode=TwoWay}"
                                    ShowPopup="{Binding DeepSkyObjectSearchVM.ShowPopup, Mode=TwoWay}"
                                    Text="{Binding DeepSkyObjectSearchVM.TargetName, UpdateSourceTrigger=PropertyChanged}">
                                    <ninactrl:AutoCompleteBox.Background>
                                        <SolidColorBrush Opacity="0.05" Color="{Binding Color, Source={StaticResource PrimaryBrush}}" />
                                    </ninactrl:AutoCompleteBox.Background>
                                </ninactrl:AutoCompleteBox>
                            </UniformGrid>
                            <UniformGrid
                                Margin="0,0,0,6"
                                VerticalAlignment="Center"
                                Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblRA}" />
                                <StackPanel Orientation="Horizontal">
                                    <TextBox
                                        MinWidth="40"
                                        Margin="5,0,0,0"
                                        TextAlignment="Right">
                                        <TextBox.Text>
                                            <Binding Path="RAHours" UpdateSourceTrigger="LostFocus">
                                                <Binding.ValidationRules>
                                                    <rules:HoursRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock VerticalAlignment="Center">h</TextBlock>
                                    <TextBox
                                        MinWidth="40"
                                        Margin="5,0,0,0"
                                        TextAlignment="Right">
                                        <TextBox.Text>
                                            <Binding Path="RAMinutes" UpdateSourceTrigger="LostFocus">
                                                <Binding.ValidationRules>
                                                    <rules:MinutesRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock VerticalAlignment="Center">m</TextBlock>
                                    <TextBox
                                        MinWidth="40"
                                        Margin="5,0,0,0"
                                        TextAlignment="Right">
                                        <TextBox.Text>
                                            <Binding Path="RASeconds" UpdateSourceTrigger="LostFocus">
                                                <Binding.ValidationRules>
                                                    <rules:SecondsRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock VerticalAlignment="Center">s</TextBlock>
                                </StackPanel>
                            </UniformGrid>
                            <UniformGrid
                                Margin="0,0,0,6"
                                VerticalAlignment="Center"
                                Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblDec}" />
                                <StackPanel Orientation="Horizontal">
                                    <TextBox
                                        MinWidth="40"
                                        Margin="5,0,0,0"
                                        TextAlignment="Right">
                                        <TextBox.Text>
                                            <MultiBinding Converter="{StaticResource DecDegreeConverter}" UpdateSourceTrigger="LostFocus">
                                                <Binding Path="NegativeDec" />
                                                <Binding Path="DecDegrees">
                                                    <Binding.ValidationRules>
                                                        <rules:DegreesRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </MultiBinding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock VerticalAlignment="Center">d</TextBlock>
                                    <TextBox
                                        MinWidth="40"
                                        Margin="5,0,0,0"
                                        TextAlignment="Right">
                                        <TextBox.Text>
                                            <Binding Path="DecMinutes" UpdateSourceTrigger="LostFocus">
                                                <Binding.ValidationRules>
                                                    <rules:MinutesRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock VerticalAlignment="Center">m</TextBlock>
                                    <TextBox
                                        MinWidth="40"
                                        Margin="5,0,0,0"
                                        TextAlignment="Right">
                                        <TextBox.Text>
                                            <Binding Path="DecSeconds" UpdateSourceTrigger="LostFocus">
                                                <Binding.ValidationRules>
                                                    <rules:SecondsRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock VerticalAlignment="Center">s</TextBlock>
                                </StackPanel>
                            </UniformGrid>
                            <UniformGrid Margin="0,0,0,6" Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblFieldOfView}" />
                                <StackPanel Orientation="Horizontal">
                                    <ninactrl:StepperControl
                                        MinWidth="150"
                                        Margin="5,0,0,0"
                                        MaxValue="200"
                                        MinValue="0.1"
                                        Value="{Binding FieldOfView, Mode=TwoWay}">
                                        <ninactrl:StepperControl.InnerContent>
                                            <ninactrl:UnitTextBox
                                                VerticalContentAlignment="Center"
                                                Text="{Binding FieldOfView}"
                                                TextAlignment="Center"
                                                Unit="Â°" />
                                        </ninactrl:StepperControl.InnerContent>
                                    </ninactrl:StepperControl>
                                </StackPanel>
                            </UniformGrid>
                        </StackPanel>
                    </GroupBox>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ninactrl:CancellableButton
                            Grid.Column="0"
                            Height="25"
                            Margin="5"
                            HorizontalAlignment="Stretch"
                            ButtonText="{ns:Loc LblLoadImage}"
                            CancelButtonImage="{StaticResource CancelSVG}"
                            CancelCommand="{Binding CancelLoadImageCommand}"
                            CancelToolTip="{ns:Loc LblCancel}"
                            Command="{Binding LoadImageCommand}" />
                        <ninactrl:LoadingControl
                            Grid.Column="1"
                            Height="30"
                            Margin="5,0,5,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            LoadingImageBrush="{StaticResource PrimaryBrush}"
                            Visibility="{Binding LoadImageCommand.Execution.IsNotCompleted, Converter={StaticResource BooleanToVisibilityCollapsedConverter}, FallbackValue=Collapsed}" />
                    </Grid>

                    <GroupBox Header="{ns:Loc LblCameraParameter}">
                        <StackPanel Orientation="Vertical">
                            <UniformGrid Margin="0,6,0,6" Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblWidth}" />
                                <TextBox Margin="5,0,0,0" Text="{Binding CameraWidth}" />
                            </UniformGrid>
                            <UniformGrid Margin="0,0,0,6" Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblHeight}" />
                                <TextBox Margin="5,0,0,0" Text="{Binding CameraHeight}" />
                            </UniformGrid>
                            <UniformGrid Margin="0,0,0,6" Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblPixelSize}" />
                                <ninactrl:UnitTextBox
                                    Margin="5,0,0,0"
                                    VerticalContentAlignment="Center"
                                    Text="{Binding CameraPixelSize}"
                                    Unit="Î¼m" />
                            </UniformGrid>
                            <UniformGrid Margin="0,0,0,6" Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblFocalLength}" />
                                <ninactrl:UnitTextBox
                                    Margin="5,0,0,0"
                                    VerticalContentAlignment="Center"
                                    Text="{Binding FocalLength}"
                                    Unit="mm" />
                            </UniformGrid>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="{ns:Loc LblTargets}">
                        <StackPanel Orientation="Vertical">
                            <UniformGrid Margin="0,6,0,6" Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblHorizontalPanels}" />
                                <ninactrl:IntStepperControl
                                    Margin="5,0,0,0"
                                    MinValue="1"
                                    Value="{Binding HorizontalPanels, Mode=TwoWay}" />
                            </UniformGrid>
                            <UniformGrid Margin="0,0,0,6" Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblVerticalPanels}" />
                                <ninactrl:IntStepperControl
                                    Margin="5,0,0,0"
                                    MinValue="1"
                                    Value="{Binding VerticalPanels, Mode=TwoWay}" />
                            </UniformGrid>
                            <UniformGrid Margin="0,0,0,6" Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblOverlapPercentage}" />
                                <ninactrl:UnitTextBox
                                    Margin="5,0,0,0"
                                    VerticalContentAlignment="Center"
                                    Text="{Binding OverlapPercentage, Converter={StaticResource PercentageConverter}}"
                                    Unit="%" />
                            </UniformGrid>
                            <UniformGrid Columns="2">
                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblRotation}" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ninactrl:UnitTextBox
                                        MinWidth="35"
                                        Margin="5,0,0,0"
                                        VerticalAlignment="Center"
                                        VerticalContentAlignment="Center"
                                        IsEnabled="{Binding RectangleCalculated}"
                                        Text="{Binding Rectangle.TotalRotation}"
                                        Unit="Â°" />
                                    <Slider
                                        Grid.Column="1"
                                        Margin="5,0,0,0"
                                        IsEnabled="{Binding RectangleCalculated}"
                                        IsSnapToTickEnabled="True"
                                        Maximum="360"
                                        Minimum="0"
                                        TickFrequency="5"
                                        Value="{Binding Rectangle.Rotation}" />
                                </Grid>
                            </UniformGrid>
                        </StackPanel>
                    </GroupBox>

                    <UniformGrid Columns="2">
                        <Grid>
                            <Button
                                Height="25"
                                Margin="5"
                                HorizontalAlignment="Stretch"
                                Command="{Binding RecenterCommand}">
                                <TextBlock
                                    Foreground="{StaticResource ButtonForegroundBrush}"
                                    Text="{ns:Loc LblRecenterImage}"
                                    TextWrapping="Wrap" />
                            </Button>
                        </Grid>

                        <Grid>
                            <ninactrl:CancellableButton
                                Height="25"
                                Margin="5"
                                CancelButtonImage="{StaticResource CancelSVG}"
                                CancelCommand="{Binding CancelSlewToCoordinatesCommand}"
                                CancelToolTip="{ns:Loc LblCancel}"
                                Command="{Binding SlewToCoordinatesCommand}" />
                            <xceed:SplitButton
                                Height="25"
                                Margin="5"
                                HorizontalAlignment="Stretch"
                                Command="{Binding SlewToCoordinatesCommand}"
                                CommandParameter="Center"
                                Style="{StaticResource StandardSplitButton}"
                                Visibility="{Binding SlewToCoordinatesCommand.Execution.IsCompleted, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                                <xceed:SplitButton.Content>
                                    <TextBlock
                                        Foreground="{StaticResource ButtonForegroundBrush}"
                                        Text="{ns:Loc LblSlewCenter}"
                                        TextWrapping="Wrap" />
                                </xceed:SplitButton.Content>
                                <xceed:SplitButton.DropDownContent>
                                    <StackPanel Orientation="Vertical">
                                        <Button
                                            HorizontalAlignment="Stretch"
                                            Command="{Binding SlewToCoordinatesCommand}"
                                            CommandParameter="Slew"
                                            Style="{StaticResource BackgroundButton}">
                                            <TextBlock
                                                Padding="4"
                                                VerticalAlignment="Center"
                                                FontSize="12"
                                                Foreground="{StaticResource PrimaryBrush}"
                                                Text="{ns:Loc LblSlew}"
                                                TextWrapping="Wrap" />
                                        </Button>
                                        <Button
                                            HorizontalAlignment="Stretch"
                                            Command="{Binding SlewToCoordinatesCommand}"
                                            CommandParameter="Rotate"
                                            Style="{StaticResource BackgroundButton}">
                                            <TextBlock
                                                Padding="4"
                                                VerticalAlignment="Center"
                                                FontSize="12"
                                                Foreground="{StaticResource PrimaryBrush}"
                                                Text="{ns:Loc LblSlewCenterRotate}"
                                                TextWrapping="Wrap" />
                                        </Button>
                                    </StackPanel>
                                </xceed:SplitButton.DropDownContent>
                            </xceed:SplitButton>
                        </Grid>
                        <Grid>
                            <ninactrl:AsyncProcessButton
                                Height="25"
                                Margin="5"
                                HorizontalAlignment="Stretch"
                                ButtonForegroundBrush="{StaticResource ButtonForegroundBrush}"
                                ButtonText="{ns:Loc LblDetermineRotationFromCamera}"
                                CancelButtonImage="{StaticResource CancelSVG}"
                                CancelCommand="{Binding CancelGetRotationFromCameraCommand}"
                                CancelToolTip="{ns:Loc LblDetermineRotationFromCameraCancel}"
                                Command="{Binding GetRotationFromCameraCommand}"
                                ToolTip="{ns:Loc LblDetermineRotationFromCameraTooltip}" />
                        </Grid>
                        <xceed:SplitButton
                            Height="25"
                            Margin="5,0,5,0"
                            Command="{Binding GetDSOTemplatesCommand}">
                            <xceed:SplitButton.Style>
                                <Style BasedOn="{StaticResource StandardSplitButton}" TargetType="{x:Type xceed:SplitButton}">
                                    <Style.Resources>
                                        <Border
                                            x:Key="MenuHeader"
                                            MinHeight="30"
                                            x:Shared="false"
                                            Background="Transparent">
                                            <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
                                        </Border>
                                        <Path
                                            x:Key="MenuIcon"
                                            Width="20"
                                            Height="20"
                                            Margin="5"
                                            x:Shared="false"
                                            Data="{Binding Icon}"
                                            Fill="{StaticResource PrimaryBrush}"
                                            Stretch="Uniform" />
                                    </Style.Resources>
                                    <Style.Triggers>
                                        <EventTrigger RoutedEvent="Click">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                                                        </BooleanAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                        <DataTrigger Binding="{Binding Source={StaticResource ProfileService}, Path=ActiveProfile.SequenceSettings.DisableSimpleSequencer}" Value="True">
                                            <Setter Property="ContextMenu">
                                                <Setter.Value>
                                                    <ContextMenu ItemsSource="{Binding Source={StaticResource Context}, Path=Data.DSOTemplates}">
                                                        <ContextMenu.ItemContainerStyle>
                                                            <Style TargetType="MenuItem">
                                                                <Setter Property="Header" Value="{StaticResource MenuHeader}" />
                                                                <Setter Property="Icon" Value="{StaticResource MenuIcon}" />
                                                                <Setter Property="Command" Value="{Binding Source={StaticResource Context}, Path=Data.SetSequencerTargetCommand}" />
                                                                <Setter Property="CommandParameter" Value="{Binding}" />
                                                            </Style>
                                                        </ContextMenu.ItemContainerStyle>
                                                    </ContextMenu>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="ContextMenu">
                                        <Setter.Value>
                                            <ContextMenu>
                                                <MenuItem Command="{Binding Source={StaticResource Context}, Path=Data.SetOldSequencerTargetCommand}" Header="{ns:Loc Lbl_OldSequencer_Title}" />
                                                <Separator />
                                                <MenuItem Header="{ns:Loc Lbl_Sequencer_Title}" ItemsSource="{Binding Source={StaticResource Context}, Path=Data.DSOTemplates}">
                                                    <MenuItem.ItemContainerStyle>
                                                        <Style TargetType="MenuItem">
                                                            <Setter Property="Header" Value="{StaticResource MenuHeader}" />
                                                            <Setter Property="Icon" Value="{StaticResource MenuIcon}" />
                                                            <Setter Property="Command" Value="{Binding Source={StaticResource Context}, Path=Data.SetSequencerTargetCommand}" />
                                                            <Setter Property="CommandParameter" Value="{Binding}" />
                                                        </Style>
                                                    </MenuItem.ItemContainerStyle>
                                                </MenuItem>
                                            </ContextMenu>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </xceed:SplitButton.Style>
                            <xceed:SplitButton.Content>
                                <TextBlock
                                    Foreground="{StaticResource ButtonForegroundBrush}"
                                    Text="{ns:Loc LblAddTargetToSequence}"
                                    TextWrapping="Wrap" />
                            </xceed:SplitButton.Content>
                            <xceed:SplitButton.DropDownContent>
                                <Button HorizontalAlignment="Stretch" Command="{Binding GetDSOTemplatesCommand}">
                                    <TextBlock
                                        Padding="4"
                                        VerticalAlignment="Center"
                                        FontSize="12"
                                        Foreground="{StaticResource PrimaryBrush}"
                                        Text="{ns:Loc LblAddTargetToTargetList}"
                                        TextWrapping="Wrap" />
                                    <Button.ToolTip>
                                        <ToolTip ToolTipService.ShowOnDisabled="False">
                                            <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblAddTargetToTargetListTooltip}" />
                                        </ToolTip>
                                    </Button.ToolTip>
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource BackgroundButton}" TargetType="{x:Type Button}">
                                            <Style.Resources>
                                                <Border
                                                    x:Key="MenuHeader"
                                                    MinHeight="30"
                                                    x:Shared="false"
                                                    Background="Transparent">
                                                    <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
                                                </Border>
                                                <Path
                                                    x:Key="MenuIcon"
                                                    Width="20"
                                                    Height="20"
                                                    Margin="5"
                                                    x:Shared="false"
                                                    Data="{Binding Icon}"
                                                    Fill="{StaticResource PrimaryBrush}"
                                                    Stretch="Uniform" />
                                            </Style.Resources>
                                            <Style.Triggers>
                                                <EventTrigger RoutedEvent="Click">
                                                    <EventTrigger.Actions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                                                                </BooleanAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger.Actions>
                                                </EventTrigger>
                                            </Style.Triggers>
                                            <Setter Property="ContextMenu">
                                                <Setter.Value>
                                                    <ContextMenu ItemsSource="{Binding Source={StaticResource Context}, Path=Data.DSOTemplates}">
                                                        <ContextMenu.ItemContainerStyle>
                                                            <Style TargetType="MenuItem">
                                                                <Setter Property="Header" Value="{StaticResource MenuHeader}" />
                                                                <Setter Property="Icon" Value="{StaticResource MenuIcon}" />
                                                                <Setter Property="Command" Value="{Binding Source={StaticResource Context}, Path=Data.AddTargetToTargetListCommand}" />
                                                                <Setter Property="CommandParameter" Value="{Binding}" />
                                                            </Style>
                                                        </ContextMenu.ItemContainerStyle>
                                                    </ContextMenu>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </xceed:SplitButton.DropDownContent>
                        </xceed:SplitButton>
                    </UniformGrid>
                </StackPanel>
                <Grid
                    Grid.Row="1"
                    Margin="5"
                    VerticalAlignment="Bottom">
                    <alt:AltitudeChart
                        MinHeight="180"
                        DataContext="{Binding DSO}"
                        NighttimeData="{Binding Source={StaticResource nighttimeProxy}, Path=Data}" />
                </Grid>
            </Grid>
        </ScrollViewer>
        <GridSplitter
            Grid.Column="1"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch" />

        <Grid Grid.Column="2">
            <wpfbase:ImageView
                Image="{Binding ImageParameter.Image, IsAsync=True}"
                RectangleFontSize="{Binding FontSize}"
                RectangleOpacity="{Binding Opacity}"
                ScrollEnabled="{Binding SkyMapAnnotator.DynamicFoV, Converter={StaticResource InverseBooleanConverter}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SizeChanged" SourceObject="{Binding RelativeSource={RelativeSource AncestorType=wpfbase:ImageView, Mode=FindAncestor}, Path=PART_ScrollViewerBinding}">
                        <i:InvokeCommandAction Command="{Binding ScrollViewerSizeChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <wpfbase:ImageView.ButtonHeaderContent>
                    <StackPanel Margin="0,0,2,0" Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblOpacity}" />
                        <ninactrl:StepperControl
                            Margin="2,0,0,0"
                            MaxValue="1"
                            MinValue="0"
                            StepSize=".1"
                            Value="{Binding Opacity, Mode=TwoWay}" />
                        <ToggleButton
                            Width="35"
                            Margin="5"
                            Command="{Binding RefreshSkyMapAnnotationCommand}"
                            IsChecked="{Binding SkyMapAnnotator.AnnotateConstellationBoundaries}">
                            <ToggleButton.ToolTip>
                                <ToolTip ToolTipService.ShowOnDisabled="False">
                                    <TextBlock Text="{ns:Loc LblAnnotateConstellationBoundaries}" />
                                </ToolTip>
                            </ToggleButton.ToolTip>
                            <ToggleButton.Style>
                                <Style BasedOn="{StaticResource TB}" TargetType="ToggleButton">
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Path
                                                        Margin="5"
                                                        Data="{StaticResource BordersSVG}"
                                                        Fill="{StaticResource ButtonForegroundBrush}"
                                                        Stretch="Uniform" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Path
                                                        Margin="5"
                                                        Data="{StaticResource BordersSVG}"
                                                        Fill="{StaticResource ButtonForegroundDisabledBrush}"
                                                        Stretch="Uniform" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ToggleButton
                            Width="35"
                            Margin="5"
                            Command="{Binding RefreshSkyMapAnnotationCommand}"
                            IsChecked="{Binding SkyMapAnnotator.AnnotateConstellations}">
                            <ToggleButton.ToolTip>
                                <ToolTip ToolTipService.ShowOnDisabled="False">
                                    <TextBlock Text="{ns:Loc LblAnnotateConstellations}" />
                                </ToolTip>
                            </ToggleButton.ToolTip>
                            <ToggleButton.Style>
                                <Style BasedOn="{StaticResource TB}" TargetType="ToggleButton">
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Path
                                                        Margin="5"
                                                        Data="{StaticResource ConstellationSVG}"
                                                        Fill="{StaticResource ButtonForegroundBrush}"
                                                        Stretch="Uniform" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Path
                                                        Margin="5"
                                                        Data="{StaticResource ConstellationSVG}"
                                                        Fill="{StaticResource ButtonForegroundDisabledBrush}"
                                                        Stretch="Uniform" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ToggleButton
                            Width="35"
                            Margin="5"
                            Command="{Binding RefreshSkyMapAnnotationCommand}"
                            IsChecked="{Binding SkyMapAnnotator.AnnotateGrid}">
                            <ToggleButton.ToolTip>
                                <ToolTip ToolTipService.ShowOnDisabled="False">
                                    <TextBlock Text="{ns:Loc LblAnnotateGrid}" />
                                </ToolTip>
                            </ToggleButton.ToolTip>
                            <ToggleButton.Style>
                                <Style BasedOn="{StaticResource TB}" TargetType="ToggleButton">
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Path
                                                        Margin="5"
                                                        Data="{StaticResource GridSVG}"
                                                        Fill="{StaticResource ButtonForegroundBrush}"
                                                        Stretch="Uniform" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Path
                                                        Margin="5"
                                                        Data="{StaticResource GridSVG}"
                                                        Fill="{StaticResource ButtonForegroundDisabledBrush}"
                                                        Stretch="Uniform" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ToggleButton
                            Width="35"
                            Margin="5"
                            Command="{Binding RefreshSkyMapAnnotationCommand}"
                            IsChecked="{Binding SkyMapAnnotator.AnnotateDSO}">
                            <ToggleButton.ToolTip>
                                <ToolTip ToolTipService.ShowOnDisabled="False">
                                    <TextBlock Text="{ns:Loc LblAnnotateDSO}" />
                                </ToolTip>
                            </ToggleButton.ToolTip>
                            <ToggleButton.Style>
                                <Style BasedOn="{StaticResource TB}" TargetType="ToggleButton">
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Path
                                                        Margin="5"
                                                        Data="{StaticResource AnnotateDSOSVG}"
                                                        Fill="{StaticResource ButtonForegroundBrush}"
                                                        Stretch="Uniform" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Path
                                                        Margin="5"
                                                        Data="{StaticResource AnnotateDSOSVG}"
                                                        Fill="{StaticResource ButtonForegroundDisabledBrush}"
                                                        Stretch="Uniform" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                    </StackPanel>
                </wpfbase:ImageView.ButtonHeaderContent>
                <wpfbase:ImageView.ImageAreaContent>
                    <Canvas Width="{Binding ImageParameter.Image.PixelWidth}" Height="{Binding ImageParameter.Image.PixelHeight}">
                        <local:SkyMapOverlayView />
                        <Grid>
                            <Grid.Resources>
                                <s:Int32 x:Key="zero">0</s:Int32>
                            </Grid.Resources>
                            <Grid>
                                <ItemsControl ItemsSource="{Binding CameraRectangles}" RenderTransformOrigin="0.5,0.5">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Grid />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                                                <Rectangle
                                                    Width="{Binding Width}"
                                                    Height="{Binding Height}"
                                                    RenderTransformOrigin="0.5,0.5"
                                                    Stroke="{StaticResource SecondaryBrush}"
                                                    StrokeThickness="5">
                                                    <Rectangle.Fill>
                                                        <SolidColorBrush Opacity="{Binding RelativeSource={RelativeSource AncestorType=wpfbase:ImageView, Mode=FindAncestor}, Path=RectangleOpacity}" Color="{Binding Path=Color, Source={StaticResource SecondaryBrush}}" />
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    FontSize="{Binding RelativeSource={RelativeSource AncestorType=wpfbase:ImageView, Mode=FindAncestor}, Path=RectangleFontSize}"
                                                    FontStretch="ExtraExpanded"
                                                    Text="{Binding Id}"
                                                    Visibility="{Binding Id, Converter={StaticResource ZeroToVisibilityConverter}}" />
                                                <Grid.Margin>
                                                    <MultiBinding Converter="{StaticResource MultiMarginConverter}">

                                                        <Binding Path="X" />
                                                        <Binding Path="Y" />
                                                        <Binding Source="{StaticResource zero}" />
                                                        <Binding Source="{StaticResource zero}" />
                                                    </MultiBinding>
                                                </Grid.Margin>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.RenderTransform>
                                        <RotateTransform Angle="{Binding Rectangle.Rotation}" />
                                    </ItemsControl.RenderTransform>
                                    <ItemsControl.Margin>
                                        <MultiBinding Converter="{StaticResource MultiMarginConverter}">

                                            <Binding Path="Rectangle.X" />
                                            <Binding Path="Rectangle.Y" />
                                            <Binding Source="{StaticResource zero}" />
                                            <Binding Source="{StaticResource zero}" />
                                        </MultiBinding>
                                    </ItemsControl.Margin>
                                </ItemsControl>
                                <Rectangle
                                    Width="{Binding Rectangle.Width}"
                                    Height="{Binding Rectangle.Height}"
                                    behaviors:DragCommandBehavior.Drag="True"
                                    behaviors:DragCommandBehavior.DragMoveCommand="{Binding DragMoveCommand}"
                                    behaviors:DragCommandBehavior.DragStartCommand="{Binding DragStartCommand}"
                                    behaviors:DragCommandBehavior.DragStopCommand="{Binding DragStopCommand}"
                                    behaviors:MouseWheelCommandBehavior.Enabled="{Binding SkyMapAnnotator.DynamicFoV}"
                                    behaviors:MouseWheelCommandBehavior.MouseWheelCommand="{Binding MouseWheelCommand}"
                                    Fill="Transparent"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stroke="{StaticResource ButtonForegroundBrush}"
                                    StrokeThickness="5">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="{Binding Rectangle.Rotation}" />
                                    </Rectangle.RenderTransform>
                                    <Rectangle.Margin>
                                        <MultiBinding Converter="{StaticResource MultiMarginConverter}">

                                            <Binding Path="Rectangle.X" />
                                            <Binding Path="Rectangle.Y" />
                                            <Binding Source="{StaticResource zero}" />
                                            <Binding Source="{StaticResource zero}" />
                                        </MultiBinding>
                                    </Rectangle.Margin>
                                </Rectangle>
                                <Grid
                                    Width="{Binding Rectangle.Width}"
                                    Height="{Binding Rectangle.Height}"
                                    IsHitTestVisible="False"
                                    RenderTransformOrigin="0.5,0.5">
                                    <Grid.Margin>
                                        <MultiBinding Converter="{StaticResource MultiMarginConverter}">

                                            <Binding Path="Rectangle.X" />
                                            <Binding Path="Rectangle.Y" />
                                            <Binding Source="{StaticResource zero}" />
                                            <Binding Source="{StaticResource zero}" />
                                        </MultiBinding>
                                    </Grid.Margin>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Canvas>
                </wpfbase:ImageView.ImageAreaContent>
            </wpfbase:ImageView>
            <StackPanel
                Margin="5,0,0,20"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Orientation="Vertical">
                <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblRA}" />
                    <TextBlock Margin="5,0,0,0" Text="{Binding Rectangle.Coordinates.RAString}" />
                </StackPanel>
                <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblDec}" />
                    <TextBlock Margin="5,0,0,0" Text="{Binding Rectangle.Coordinates.DecString}" />
                </StackPanel>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>