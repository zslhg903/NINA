<!--
    Copyright © 2016 - 2021 Stefan Berg <isbeorn86+NINA@googlemail.com> and the N.I.N.A. contributors

    This file is part of N.I.N.A. - Nighttime Imaging 'N' Astronomy.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.-->
<UserControl
    x:Class="NINA.View.Sequencer.SequenceRootContainerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:NINA.Sequencer.Behaviors"
    xmlns:cont="clr-namespace:NINA.Sequencer.Container"
    xmlns:converter="clr-namespace:NINA.View.Sequencer.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:NINA.View.Sequencer"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ninactrl="clr-namespace:NINACustomControlLibrary;assembly=NINACustomControlLibrary"
    xmlns:ns="clr-namespace:NINA.Core.Locale;assembly=NINA.Core"
    xmlns:seqItem="clr-namespace:NINA.Sequencer.SequenceItem"
    xmlns:utility="clr-namespace:NINA.Core.Utility;assembly=NINA.Core"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>
        <utility:BindingProxy x:Key="Context" Data="{Binding}" />
        <utility:BindingProxy x:Key="ViewModel" Data="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SequenceView}}, Path=DataContext}" />
        <CollectionViewSource x:Key="GroupedItems" Source="{Binding Source={StaticResource ViewModel}, Path=Data.SequencerFactory.Items}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Category" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <converter:DroppableToDropIntoParametersConverter x:Key="DroppableToDropIntoParametersConverter" />
        <converter:StrategyEvaluatesConditionsAndTriggersToVisibilityConverter x:Key="StrategyEvaluatesConditionsAndTriggersToVisibilityConverter" />

        <Border
            x:Key="MenuHeader"
            MinHeight="30"
            x:Shared="false"
            Background="Transparent">
            <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
        </Border>
        <Border
            x:Key="TemplateMenuHeader"
            MinHeight="30"
            x:Shared="false"
            Background="Transparent">
            <TextBlock VerticalAlignment="Center" Text="{Binding Container.Name}" />
        </Border>
        <Path
            x:Key="MenuIcon"
            Width="20"
            Height="20"
            Margin="5"
            x:Shared="false"
            Data="{Binding Icon}"
            Fill="{StaticResource PrimaryBrush}"
            Stretch="Uniform" />
        <Path
            x:Key="TemplateMenuIcon"
            Width="20"
            Height="20"
            Margin="5"
            x:Shared="false"
            Data="{Binding Container.Icon}"
            Fill="{StaticResource PrimaryBrush}"
            Stretch="Uniform" />

        <Style x:Key="ContainerStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <MenuItem
                            local:GroupMenuBehavior.Dummy="True"
                            Header="{StaticResource MenuHeader}"
                            ItemsSource="{Binding Items}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Header" Value="{StaticResource MenuHeader}" />
                                    <Setter Property="Icon" Value="{StaticResource MenuIcon}" />
                                    <Setter Property="Command" Value="{Binding Source={StaticResource Context}, Path=Data.DropIntoCommand}" />
                                    <Setter Property="CommandParameter" Value="{Binding Converter={StaticResource DroppableToDropIntoParametersConverter}}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid
        Margin="0,5,0,0"
        Background="{StaticResource BackgroundBrush}"
        IsHitTestVisible="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid
            Name="PART_Header"
            Grid.Row="0"
            MinHeight="35"
            Margin="0"
            HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
            Background="{StaticResource SecondaryBackgroundBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBox
                Grid.Row="0"
                Grid.Column="1"
                MinWidth="200"
                Margin="10,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Background="{StaticResource SecondaryBackgroundBrush}"
                FontSize="10pt"
                Foreground="{StaticResource ButtonForegroundBrush}"
                Text="{Binding SequenceTitle, UpdateSourceTrigger=PropertyChanged}" />
            <StackPanel
                x:Name="ButtonCommands"
                Grid.Column="2"
                Orientation="Horizontal">
                <Button
                    x:Name="ResetProgressButton"
                    Width="25"
                    Height="25"
                    Margin="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Command="{Binding ResetProgressCommand}"
                    Style="{StaticResource SecondaryBackgroundButton}">
                    <Grid>
                        <Path
                            Margin="5"
                            Data="{StaticResource RefreshSVG}"
                            Fill="{StaticResource ButtonForegroundBrush}"
                            Stretch="Uniform" />
                    </Grid>
                    <Button.ToolTip>
                        <ToolTip>
                            <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_Reset_Tooltip}" />
                        </ToolTip>
                    </Button.ToolTip>
                </Button>
            </StackPanel>

            <Button
                x:Name="AddButton"
                Grid.Column="3"
                Width="25"
                Height="25"
                Margin="5">
                <Path
                    Margin="5"
                    Data="{StaticResource AddSVG}"
                    Fill="{StaticResource ButtonForegroundBrush}"
                    Stretch="Uniform" />
                <Button.ToolTip>
                    <ToolTip>
                        <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_AddInstruction_Tooltip}" />
                    </ToolTip>
                </Button.ToolTip>
                <Button.Style>
                    <Style BasedOn="{StaticResource SecondaryBackgroundButton}" TargetType="{x:Type Button}">
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="Click">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Style.Triggers>
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu>
                                    <MenuItem MinHeight="30" ItemsSource="{Binding Source={StaticResource GroupedItems}}">
                                        <MenuItem.Header>
                                            <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblInstructions}" />
                                        </MenuItem.Header>
                                        <MenuItem.GroupStyle>
                                            <GroupStyle ContainerStyle="{StaticResource ContainerStyle}" />
                                        </MenuItem.GroupStyle>
                                    </MenuItem>
                                    <MenuItem MinHeight="30" ItemsSource="{Binding Source={StaticResource ViewModel}, Path=Data.TemplateController.TemplatesMenuView}">
                                        <MenuItem.Header>
                                            <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblTemplates}" />
                                        </MenuItem.Header>
                                        <MenuItem.ItemContainerStyle>
                                            <Style TargetType="MenuItem">
                                                <Setter Property="Header" Value="{StaticResource TemplateMenuHeader}" />
                                                <Setter Property="Icon" Value="{StaticResource TemplateMenuIcon}" />
                                                <Setter Property="Command" Value="{Binding Source={StaticResource Context}, Path=Data.DropIntoCommand}" />
                                                <Setter Property="CommandParameter" Value="{Binding Converter={StaticResource DroppableToDropIntoParametersConverter}}" />
                                            </Style>
                                        </MenuItem.ItemContainerStyle>
                                    </MenuItem>
                                    <MenuItem MinHeight="30" ItemsSource="{Binding Source={StaticResource ViewModel}, Path=Data.TargetController.TargetsMenuView}">
                                        <MenuItem.Header>
                                            <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblTargets}" />
                                        </MenuItem.Header>
                                        <MenuItem.ItemContainerStyle>
                                            <Style TargetType="MenuItem">
                                                <Setter Property="Header" Value="{StaticResource MenuHeader}" />
                                                <Setter Property="Icon" Value="{StaticResource TemplateMenuIcon}" />
                                                <Setter Property="Command" Value="{Binding Source={StaticResource Context}, Path=Data.DropIntoCommand}" />
                                                <Setter Property="CommandParameter" Value="{Binding Converter={StaticResource DroppableToDropIntoParametersConverter}}" />
                                            </Style>
                                        </MenuItem.ItemContainerStyle>
                                    </MenuItem>
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
            <Border Grid.Column="4" Background="{StaticResource SecondaryBackgroundBrush}">
                <ContentPresenter
                    Margin="2,0,10,0"
                    HorizontalAlignment="Right"
                    Content="{Binding}"
                    Style="{StaticResource ProgressPresenter}" />
            </Border>
        </Grid>

        <Border
            Grid.Row="1"
            MinHeight="40"
            HorizontalAlignment="Stretch"
            Background="{StaticResource BackgroundBrush}"
            BorderBrush="{StaticResource SecondaryBackgroundBrush}"
            BorderThickness="0,0,3,3">
            <Grid>
                <ItemsControl Margin="20,10,0,10" ItemsSource="{Binding Items}">
                    <ItemsControl.Resources>
                        <ResourceDictionary>
                            <DataTemplate DataType="{x:Type seqItem:SequenceItem}">
                                <local:SequenceBlockView DataContext="{Binding}" />
                            </DataTemplate>
                        </ResourceDictionary>
                    </ItemsControl.Resources>
                </ItemsControl>
            </Grid>
        </Border>
    </Grid>
</UserControl>