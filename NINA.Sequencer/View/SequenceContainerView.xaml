<!--
    Copyright © 2016 - 2021 Stefan Berg <isbeorn86+NINA@googlemail.com> and the N.I.N.A. contributors

    This file is part of N.I.N.A. - Nighttime Imaging 'N' Astronomy.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.-->
<UserControl
    x:Class="NINA.View.Sequencer.SequenceContainerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:NINA.Sequencer.Behaviors"
    xmlns:condition="clr-namespace:NINA.Sequencer.Conditions"
    xmlns:cont="clr-namespace:NINA.Sequencer.Container"
    xmlns:converter="clr-namespace:NINA.View.Sequencer.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dragdrop="clr-namespace:NINA.Sequencer.DragDrop"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:NINA.View.Sequencer"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ninactrl="clr-namespace:NINACustomControlLibrary;assembly=NINACustomControlLibrary"
    xmlns:ns="clr-namespace:NINA.Core.Locale;assembly=NINA.Core"
    xmlns:seq="clr-namespace:NINA.Sequencer"
    xmlns:seqCond="clr-namespace:NINA.Sequencer.Conditions"
    xmlns:seqItem="clr-namespace:NINA.Sequencer.SequenceItem"
    xmlns:seqTrig="clr-namespace:NINA.Sequencer.Trigger"
    xmlns:sequencerPlatesolve="clr-namespace:NINA.Sequencer.SequenceItem.Platesolving"
    xmlns:sequencerUtil="clr-namespace:NINA.Sequencer.SequenceItem.Utility"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:t="clr-namespace:NINA.Sequencer.Trigger"
    xmlns:utility="clr-namespace:NINA.Core.Utility;assembly=NINA.Core"
    xmlns:wpfutil="clr-namespace:NINA.WPF.Base.Utility;assembly=NINA.WPF.Base"
    x:Name="UC"
    Margin="0,0,0,0"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <wpfutil:SharedResourceDictionary Source="/NINA.WPF.Base;component/Resources/StaticResources/ProfileService.xaml" />
                <wpfutil:SharedResourceDictionary Source="/NINA.WPF.Base;component/Resources/StaticResources/SVGDictionary.xaml" />
                <wpfutil:SharedResourceDictionary Source="/NINA.WPF.Base;component/Resources/StaticResources/Brushes.xaml" />
                <wpfutil:SharedResourceDictionary Source="/NINA.WPF.Base;component/Resources/StaticResources/Converters.xaml" />
                <wpfutil:SharedResourceDictionary Source="/NINA.WPF.Base;component/Resources/Styles/Expander.xaml" />
                <wpfutil:SharedResourceDictionary Source="/NINA.WPF.Base;component/Resources/Styles/Button.xaml" />
                <wpfutil:SharedResourceDictionary Source="/NINA.Sequencer;component/Resources/Styles/ProgressStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <ContentPresenter x:Name="Content" Content="{Binding}">
        <ContentPresenter.Resources>
            <utility:BindingProxy x:Key="Context" Data="{Binding}" />
            <utility:BindingProxy x:Key="ViewModel" Data="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SequenceView}}, Path=DataContext}" />
            <CollectionViewSource x:Key="GroupedItems" Source="{Binding Source={StaticResource ViewModel}, Path=Data.SequencerFactory.Items}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="Category" />
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>
            <converter:DroppableToDropIntoParametersConverter x:Key="DroppableToDropIntoParametersConverter" />
            <converter:StrategyEvaluatesConditionsAndTriggersToVisibilityConverter x:Key="StrategyEvaluatesConditionsAndTriggersToVisibilityConverter" />

            <Border
                x:Key="MenuHeader"
                MinHeight="30"
                x:Shared="false"
                Background="Transparent">
                <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
            </Border>
            <Border
                x:Key="TemplateMenuHeader"
                MinHeight="30"
                x:Shared="false"
                Background="Transparent">
                <TextBlock VerticalAlignment="Center" Text="{Binding Container.Name}" />
            </Border>
            <Path
                x:Key="MenuIcon"
                Width="20"
                Height="20"
                Margin="5"
                x:Shared="false"
                Data="{Binding Icon}"
                Fill="{StaticResource PrimaryBrush}"
                Stretch="Uniform" />
            <Path
                x:Key="TemplateMenuIcon"
                Width="20"
                Height="20"
                Margin="5"
                x:Shared="false"
                Data="{Binding Container.Icon}"
                Fill="{StaticResource PrimaryBrush}"
                Stretch="Uniform" />

            <Style x:Key="ContainerStyle" TargetType="{x:Type GroupItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupItem}">
                            <MenuItem
                                local:GroupMenuBehavior.Dummy="True"
                                Header="{StaticResource MenuHeader}"
                                ItemsSource="{Binding Items}">
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Header" Value="{StaticResource MenuHeader}" />
                                        <Setter Property="Icon" Value="{StaticResource MenuIcon}" />
                                        <Setter Property="Command" Value="{Binding Source={StaticResource Context}, Path=Data.DropIntoCommand}" />
                                        <Setter Property="CommandParameter" Value="{Binding Converter={StaticResource DroppableToDropIntoParametersConverter}}" />
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SequenceContainerHeaderExpanderStyle" TargetType="ToggleButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <StackPanel>
                                <Border Height="10" BorderBrush="Transparent" />
                                <Border
                                    x:Name="topBorder"
                                    BorderBrush="{StaticResource SecondaryBackgroundBrush}"
                                    BorderThickness="1,1,0,0">
                                    <Grid
                                        x:Name="Head"
                                        Background="{StaticResource SecondaryBackgroundBrush}"
                                        SnapsToDevicePixels="True">
                                        <Grid.Resources>
                                            <Path
                                                x:Key="TelescopeIcon"
                                                Width="20"
                                                Height="20"
                                                Margin="5,0,0,0"
                                                Data="{StaticResource TelescopeSVG}"
                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                Stretch="Uniform" />
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Path
                                            x:Name="iconarrow"
                                            Grid.Column="0"
                                            Width="10"
                                            Height="10"
                                            Margin="10,0,10,0"
                                            Data="{StaticResource ArrowRightSVG}"
                                            Fill="{StaticResource ButtonForegroundBrush}"
                                            Stretch="Uniform" />
                                        <Path
                                            x:Name="icon"
                                            Grid.Column="1"
                                            Margin="5,0,3,0"
                                            Data="{StaticResource BoxClosedSVG}"
                                            Fill="{StaticResource ButtonForegroundBrush}"
                                            Stretch="Uniform" />
                                        <Path
                                            Grid.Column="2"
                                            Width="20"
                                            Height="20"
                                            Margin="5,0,3,0"
                                            Data="{Binding Icon}"
                                            Fill="{StaticResource ButtonForegroundBrush}"
                                            Stretch="Uniform" />
                                        <ContentPresenter
                                            Grid.Column="3"
                                            Margin="4,0,0,0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="True">
                                            <i:Interaction.Behaviors>
                                                <behaviors:DragDropBehavior />
                                            </i:Interaction.Behaviors>
                                        </ContentPresenter>
                                    </Grid>
                                </Border>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="icon" Property="Data" Value="{StaticResource BoxSVG}" />
                                    <Setter TargetName="iconarrow" Property="Data" Value="{StaticResource ArrowDownSVG}" />
                                    <Setter TargetName="iconarrow" Property="Margin" Value="5,0,10,0" />
                                </Trigger>

                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="topBorder" Property="BorderThickness" Value="1,1,1,1" />
                                </Trigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Head" Property="Background" Value="{StaticResource ButtonBackgroundSelectedBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SequenceContainerExpander" TargetType="ninactrl:DetachingExpander">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ninactrl:DetachingExpander">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Focusable="False"
                                SnapsToDevicePixels="true">
                                <DockPanel>
                                    <ToggleButton
                                        x:Name="HeaderSite"
                                        MinWidth="0"
                                        MinHeight="0"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                        DockPanel.Dock="Top"
                                        FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        FontStretch="{TemplateBinding FontStretch}"
                                        FontStyle="{TemplateBinding FontStyle}"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource SequenceContainerHeaderExpanderStyle}" />
                                    <StackPanel DockPanel.Dock="Bottom">
                                        <Border
                                            Height="10"
                                            Margin="0,0,0,0"
                                            HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                                            Background="Transparent" />
                                    </StackPanel>
                                    <Border BorderBrush="{StaticResource SecondaryBackgroundBrush}" BorderThickness="3,0,0,3">
                                        <ContentPresenter
                                            x:Name="ExpandSite"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Focusable="false"
                                            Visibility="Collapsed" />
                                    </Border>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="true">
                                    <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ContentPresenter.Resources>
        <ContentPresenter.ContentTemplate>
            <DataTemplate DataType="{x:Type cont:SequenceContainer}">
                <ninactrl:DetachingExpander
                    Padding="0,0,0,0"
                    Background="{StaticResource BackgroundBrush}"
                    BorderBrush="{StaticResource BorderBrush}"
                    BorderThickness="0,0,0,0"
                    IsExpanded="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    IsHitTestVisible="True"
                    Style="{StaticResource SequenceContainerExpander}">
                    <i:Interaction.Behaviors>
                        <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TargetSequenceContainer" OnDropCommand="{Binding DropIntoCommand}" />
                        <behaviors:DragOverBehavior
                            AllowDragCenter="False"
                            DragAboveSize="25"
                            DragBelowSize="15" />
                    </i:Interaction.Behaviors>
                    <ninactrl:DetachingExpander.Header>
                        <Grid
                            Name="PART_Header"
                            Grid.Row="0"
                            MinHeight="35"
                            Margin="0"
                            HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                            Background="{StaticResource SecondaryBackgroundBrush}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox
                                Grid.Column="0"
                                MinWidth="200"
                                Padding="5"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="{StaticResource SecondaryBackgroundBrush}"
                                DockPanel.Dock="Left"
                                FontSize="10pt"
                                Foreground="{StaticResource ButtonForegroundBrush}"
                                Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                            <Border Grid.Column="1" Background="{StaticResource SecondaryBackgroundBrush}">
                                <ContentPresenter
                                    Margin="2,0,10,0"
                                    HorizontalAlignment="Right"
                                    Content="{Binding}"
                                    DockPanel.Dock="Right"
                                    Style="{StaticResource ProgressPresenter}" />
                            </Border>
                            <Border
                                x:Name="ButtonCommands"
                                Grid.Column="2"
                                HorizontalAlignment="Stretch"
                                Background="{StaticResource SecondaryBackgroundBrush}">
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    <Button
                                        x:Name="TargetContainerButton"
                                        Width="25"
                                        Height="25"
                                        Margin="25,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Command="{Binding Path=Data.AddTargetToControllerCommand, Source={StaticResource ViewModel}}"
                                        CommandParameter="{Binding Converter={StaticResource DroppableToDropIntoParametersConverter}}">
                                        <Grid>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource PictureSVG}"
                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                Stretch="Uniform" />
                                        </Grid>
                                        <Button.ToolTip>
                                            <ToolTip>
                                                <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_SaveAsTarget_Tooltip}" />
                                            </ToolTip>
                                        </Button.ToolTip>
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource SecondaryBackgroundButton}" TargetType="Button">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=., Converter={StaticResource DataTypeToStringConverter}}" Value="{x:Type cont:DeepSkyObjectContainer}">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <Button
                                        x:Name="TemplateContainerButton"
                                        Width="25"
                                        Height="25"
                                        Margin="25,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Command="{Binding Path=Data.AddTemplateCommand, Source={StaticResource ViewModel}}"
                                        CommandParameter="{Binding Converter={StaticResource DroppableToDropIntoParametersConverter}}"
                                        Style="{StaticResource SecondaryBackgroundButton}">
                                        <Grid>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource SaveAsSVG}"
                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                Stretch="Uniform" />
                                        </Grid>
                                        <Button.ToolTip>
                                            <ToolTip>
                                                <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_SaveAsTemplate_Tooltip}" />
                                            </ToolTip>
                                        </Button.ToolTip>
                                    </Button>

                                    <Button
                                        x:Name="CloseButton"
                                        Width="25"
                                        Height="25"
                                        Margin="25,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Command="{Binding DetachCommand}"
                                        Style="{StaticResource SecondaryBackgroundButton}"
                                        Visibility="{Binding DetachCommand, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                                        <Grid>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource TrashCanSVG}"
                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                Stretch="Uniform" />
                                        </Grid>
                                        <Button.ToolTip>
                                            <ToolTip>
                                                <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_Delete_Tooltip}" />
                                            </ToolTip>
                                        </Button.ToolTip>
                                    </Button>

                                    <Button
                                        x:Name="ResetProgressButton"
                                        Width="25"
                                        Height="25"
                                        Margin="25,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Command="{Binding ResetProgressCommand}"
                                        Style="{StaticResource SecondaryBackgroundButton}">
                                        <Grid>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource RefreshSVG}"
                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                Stretch="Uniform" />
                                        </Grid>
                                        <Button.ToolTip>
                                            <ToolTip>
                                                <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_Reset_Tooltip}" />
                                            </ToolTip>
                                        </Button.ToolTip>
                                    </Button>

                                    <Button
                                        x:Name="CloneContainerButton"
                                        Width="25"
                                        Height="25"
                                        Margin="25,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Command="{Binding AddCloneToParentCommand}"
                                        Style="{StaticResource SecondaryBackgroundButton}"
                                        Visibility="{Binding AddCloneToParentCommand, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                                        <Grid>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource CopySVG}"
                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                Stretch="Uniform" />
                                        </Grid>
                                        <Button.ToolTip>
                                            <ToolTip>
                                                <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_Duplicate_Tooltip}" />
                                            </ToolTip>
                                        </Button.ToolTip>
                                    </Button>

                                    <Button
                                        x:Name="MoveUpButton"
                                        Width="25"
                                        Height="25"
                                        Margin="25,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Command="{Binding MoveUpCommand}"
                                        Style="{StaticResource SecondaryBackgroundButton}">
                                        <Grid>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource ArrowUpSVG}"
                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                Stretch="Uniform" />
                                        </Grid>
                                        <Button.ToolTip>
                                            <ToolTip>
                                                <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_MoveUp_Tooltip}" />
                                            </ToolTip>
                                        </Button.ToolTip>
                                    </Button>

                                    <Button
                                        x:Name="MoveDownButton"
                                        Width="25"
                                        Height="25"
                                        Margin="10,0,5,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Command="{Binding MoveDownCommand}"
                                        Style="{StaticResource SecondaryBackgroundButton}"
                                        Visibility="{Binding MoveDownCommand, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                                        <Grid>
                                            <Path
                                                Margin="5"
                                                Data="{StaticResource ArrowDownSVG}"
                                                Fill="{StaticResource ButtonForegroundBrush}"
                                                Stretch="Uniform" />
                                        </Grid>
                                        <Button.ToolTip>
                                            <ToolTip>
                                                <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_MoveDown_Tooltip}" />
                                            </ToolTip>
                                        </Button.ToolTip>
                                    </Button>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </ninactrl:DetachingExpander.Header>

                    <ninactrl:DetachingExpander.Content>
                        <DockPanel
                            HorizontalAlignment="Stretch"
                            IsHitTestVisible="True"
                            LastChildFill="True">
                            <Border DockPanel.Dock="Top">
                                <StackPanel Orientation="Vertical">
                                    <Border BorderBrush="{StaticResource TertiaryBackgroundBrush}" BorderThickness="0,0,0,1">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <ContentPresenter
                                                Grid.Row="0"
                                                Grid.ColumnSpan="4"
                                                Margin="5,0,0,0"
                                                VerticalAlignment="Top"
                                                Content="{Binding SequenceContainerContent, ElementName=UC}" />

                                            <Grid Grid.Row="1" Visibility="{Binding ShowDetails, ElementName=UC, Converter={StaticResource VisibilityConverter}}">
                                                <ninactrl:HitTestGroupBox
                                                    VerticalAlignment="Stretch"
                                                    VerticalContentAlignment="Top"
                                                    Background="{StaticResource BackgroundBrush}"
                                                    BorderBrush="Transparent"
                                                    IsHitTestVisible="True"
                                                    Visibility="{Binding Converter={StaticResource StrategyEvaluatesConditionsAndTriggersToVisibilityConverter}}">
                                                    <i:Interaction.Behaviors>
                                                        <behaviors:DragOverBehavior DragOverCenterText="{ns:Loc LblDragOver_AddTrigger}" DragOverDisplayAnchor="Right" />
                                                        <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Trigger.SequenceTrigger" OnDropCommand="{Binding Source={StaticResource Context}, Path=Data.DropIntoTriggersCommand}" />
                                                    </i:Interaction.Behaviors>
                                                    <GroupBox.Header>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="Auto" />
                                                            </Grid.ColumnDefinitions>
                                                            <StackPanel Orientation="Horizontal">
                                                                <Path
                                                                    Grid.Column="0"
                                                                    Width="15"
                                                                    Height="15"
                                                                    Margin="5"
                                                                    Data="{StaticResource ThunderSVG}"
                                                                    Fill="{StaticResource PrimaryBrush}"
                                                                    Stretch="Uniform" />
                                                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblTriggers}" />
                                                            </StackPanel>
                                                            <Button
                                                                x:Name="AddTriggerButton"
                                                                Grid.Column="1"
                                                                Width="25"
                                                                Height="25"
                                                                Margin="5">
                                                                <Path
                                                                    Margin="5"
                                                                    Data="{StaticResource AddSVG}"
                                                                    Fill="{StaticResource PrimaryBrush}"
                                                                    Stretch="Uniform" />
                                                                <Button.ToolTip>
                                                                    <ToolTip>
                                                                        <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_AddTrigger_Tooltip}" />
                                                                    </ToolTip>
                                                                </Button.ToolTip>
                                                                <Button.Style>
                                                                    <Style BasedOn="{StaticResource BackgroundButton}" TargetType="{x:Type Button}">
                                                                        <Style.Triggers>
                                                                            <EventTrigger RoutedEvent="Click">
                                                                                <EventTrigger.Actions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                                                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                                                                                            </BooleanAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </EventTrigger.Actions>
                                                                            </EventTrigger>
                                                                        </Style.Triggers>
                                                                        <Setter Property="ContextMenu">
                                                                            <Setter.Value>
                                                                                <ContextMenu ItemsSource="{Binding Source={StaticResource ViewModel}, Path=Data.SequencerFactory.Triggers}">
                                                                                    <ContextMenu.ItemContainerStyle>
                                                                                        <Style TargetType="MenuItem">
                                                                                            <Setter Property="Header" Value="{StaticResource MenuHeader}" />
                                                                                            <Setter Property="Icon" Value="{StaticResource MenuIcon}" />
                                                                                            <Setter Property="Command" Value="{Binding Source={StaticResource Context}, Path=Data.DropIntoTriggersCommand}" />
                                                                                            <Setter Property="CommandParameter" Value="{Binding Converter={StaticResource DroppableToDropIntoParametersConverter}}" />
                                                                                        </Style>
                                                                                    </ContextMenu.ItemContainerStyle>
                                                                                </ContextMenu>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Button.Style>
                                                            </Button>
                                                        </Grid>
                                                    </GroupBox.Header>
                                                    <ItemsControl
                                                        Margin="0,0,0,0"
                                                        VerticalAlignment="Top"
                                                        ItemsSource="{Binding Triggers}">

                                                        <ItemsControl.Resources>
                                                            <ResourceDictionary>
                                                                <DataTemplate DataType="{x:Type seqTrig:SequenceTrigger}">
                                                                    <local:SequenceBlockView DataContext="{Binding}" />
                                                                </DataTemplate>
                                                            </ResourceDictionary>
                                                        </ItemsControl.Resources>
                                                    </ItemsControl>
                                                </ninactrl:HitTestGroupBox>
                                            </Grid>

                                            <Grid Grid.Row="2" Visibility="{Binding ShowDetails, ElementName=UC, Converter={StaticResource VisibilityConverter}}">
                                                <Border
                                                    BorderBrush="{StaticResource TertiaryBackgroundBrush}"
                                                    BorderThickness="0,1,0,0"
                                                    Visibility="{Binding Converter={StaticResource StrategyEvaluatesConditionsAndTriggersToVisibilityConverter}}" />
                                            </Grid>

                                            <Grid Grid.Row="3" Visibility="{Binding ShowDetails, ElementName=UC, Converter={StaticResource VisibilityConverter}}">
                                                <ninactrl:HitTestGroupBox
                                                    VerticalAlignment="Stretch"
                                                    VerticalContentAlignment="Top"
                                                    BorderBrush="Transparent"
                                                    Visibility="{Binding Converter={StaticResource StrategyEvaluatesConditionsAndTriggersToVisibilityConverter}}">
                                                    <GroupBox.Header>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="Auto" />
                                                            </Grid.ColumnDefinitions>
                                                            <StackPanel Orientation="Horizontal">
                                                                <Path
                                                                    Grid.Column="0"
                                                                    Width="15"
                                                                    Height="15"
                                                                    Margin="5"
                                                                    Data="{StaticResource NotepadSVG}"
                                                                    Fill="{StaticResource PrimaryBrush}"
                                                                    Stretch="Uniform" />
                                                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc Lbl_SequenceContainer_Conditions_Header}" />
                                                            </StackPanel>
                                                            <Button
                                                                x:Name="AddConditionButton"
                                                                Grid.Column="1"
                                                                Width="25"
                                                                Height="25"
                                                                Margin="5">
                                                                <Path
                                                                    Margin="5"
                                                                    Data="{StaticResource AddSVG}"
                                                                    Fill="{StaticResource PrimaryBrush}"
                                                                    Stretch="Uniform" />
                                                                <Button.ToolTip>
                                                                    <ToolTip>
                                                                        <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_AddCondition_Tooltip}" />
                                                                    </ToolTip>
                                                                </Button.ToolTip>
                                                                <Button.Style>
                                                                    <Style BasedOn="{StaticResource BackgroundButton}" TargetType="{x:Type Button}">
                                                                        <Style.Triggers>
                                                                            <EventTrigger RoutedEvent="Click">
                                                                                <EventTrigger.Actions>
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                                                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                                                                                            </BooleanAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </EventTrigger.Actions>
                                                                            </EventTrigger>
                                                                        </Style.Triggers>
                                                                        <Setter Property="ContextMenu">
                                                                            <Setter.Value>
                                                                                <ContextMenu ItemsSource="{Binding Source={StaticResource ViewModel}, Path=Data.SequencerFactory.Conditions}">
                                                                                    <ContextMenu.ItemContainerStyle>
                                                                                        <Style TargetType="MenuItem">
                                                                                            <Setter Property="Header" Value="{StaticResource MenuHeader}" />
                                                                                            <Setter Property="Icon" Value="{StaticResource MenuIcon}" />
                                                                                            <Setter Property="Command" Value="{Binding Source={StaticResource Context}, Path=Data.DropIntoConditionsCommand}" />
                                                                                            <Setter Property="CommandParameter" Value="{Binding Converter={StaticResource DroppableToDropIntoParametersConverter}}" />
                                                                                        </Style>
                                                                                    </ContextMenu.ItemContainerStyle>
                                                                                </ContextMenu>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Button.Style>
                                                            </Button>
                                                        </Grid>
                                                    </GroupBox.Header>
                                                    <i:Interaction.Behaviors>
                                                        <behaviors:DragOverBehavior DragOverCenterText="{ns:Loc LblDragOver_AddCondition}" DragOverDisplayAnchor="Right" />
                                                        <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Conditions.SequenceCondition" OnDropCommand="{Binding Source={StaticResource Context}, Path=Data.DropIntoConditionsCommand}" />
                                                    </i:Interaction.Behaviors>
                                                    <ItemsControl
                                                        Margin="0,0,0,0"
                                                        VerticalAlignment="Top"
                                                        ItemsSource="{Binding Conditions}">

                                                        <ItemsControl.Resources>
                                                            <ResourceDictionary>
                                                                <DataTemplate DataType="{x:Type seqCond:SequenceCondition}">
                                                                    <local:SequenceBlockView DataContext="{Binding}" />
                                                                </DataTemplate>
                                                            </ResourceDictionary>
                                                        </ItemsControl.Resources>
                                                    </ItemsControl>
                                                </ninactrl:HitTestGroupBox>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </StackPanel>
                            </Border>

                            <Grid
                                MinHeight="40"
                                Background="{StaticResource BackgroundBrush}"
                                Visibility="{Binding ShowDetails, ElementName=UC, Converter={StaticResource VisibilityConverter}}">
                                <i:Interaction.Behaviors>
                                    <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                </i:Interaction.Behaviors>
                                <ninactrl:HitTestGroupBox BorderBrush="Transparent">
                                    <GroupBox.Header>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Orientation="Horizontal">
                                                <Path
                                                    Grid.Column="0"
                                                    Width="15"
                                                    Height="15"
                                                    Margin="5"
                                                    Data="{StaticResource SequenceSVG}"
                                                    Fill="{StaticResource PrimaryBrush}"
                                                    Stretch="Uniform" />
                                                <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblInstructions}" />
                                            </StackPanel>
                                            <Button
                                                x:Name="AddButton"
                                                Grid.Column="1"
                                                Width="25"
                                                Height="25"
                                                Margin="5">
                                                <Path
                                                    Margin="5"
                                                    Data="{StaticResource AddSVG}"
                                                    Fill="{StaticResource PrimaryBrush}"
                                                    Stretch="Uniform" />
                                                <Button.ToolTip>
                                                    <ToolTip>
                                                        <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_AddInstruction_Tooltip}" />
                                                    </ToolTip>
                                                </Button.ToolTip>
                                                <Button.Style>
                                                    <Style BasedOn="{StaticResource BackgroundButton}" TargetType="{x:Type Button}">
                                                        <Style.Triggers>
                                                            <EventTrigger RoutedEvent="Click">
                                                                <EventTrigger.Actions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                                                                            </BooleanAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger.Actions>
                                                            </EventTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="ContextMenu">
                                                            <Setter.Value>
                                                                <ContextMenu>
                                                                    <MenuItem MinHeight="30" ItemsSource="{Binding Source={StaticResource GroupedItems}}">
                                                                        <MenuItem.Header>
                                                                            <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblInstructions}" />
                                                                        </MenuItem.Header>
                                                                        <MenuItem.GroupStyle>
                                                                            <GroupStyle ContainerStyle="{StaticResource ContainerStyle}" />
                                                                        </MenuItem.GroupStyle>
                                                                    </MenuItem>
                                                                    <MenuItem MinHeight="30" ItemsSource="{Binding Source={StaticResource ViewModel}, Path=Data.TemplateController.TemplatesMenuView}">
                                                                        <MenuItem.Header>
                                                                            <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblTemplates}" />
                                                                        </MenuItem.Header>
                                                                        <MenuItem.ItemContainerStyle>
                                                                            <Style TargetType="MenuItem">
                                                                                <Setter Property="Header" Value="{StaticResource TemplateMenuHeader}" />
                                                                                <Setter Property="Icon" Value="{StaticResource TemplateMenuIcon}" />
                                                                                <Setter Property="Command" Value="{Binding Source={StaticResource Context}, Path=Data.DropIntoCommand}" />
                                                                                <Setter Property="CommandParameter" Value="{Binding Converter={StaticResource DroppableToDropIntoParametersConverter}}" />
                                                                            </Style>
                                                                        </MenuItem.ItemContainerStyle>
                                                                    </MenuItem>
                                                                    <MenuItem MinHeight="30" ItemsSource="{Binding Source={StaticResource ViewModel}, Path=Data.TargetController.TargetsMenuView}">
                                                                        <MenuItem.Header>
                                                                            <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblTargets}" />
                                                                        </MenuItem.Header>
                                                                        <MenuItem.ItemContainerStyle>
                                                                            <Style TargetType="MenuItem">
                                                                                <Setter Property="Header" Value="{StaticResource MenuHeader}" />
                                                                                <Setter Property="Icon" Value="{StaticResource TemplateMenuIcon}" />
                                                                                <Setter Property="Command" Value="{Binding Source={StaticResource Context}, Path=Data.DropIntoCommand}" />
                                                                                <Setter Property="CommandParameter" Value="{Binding Converter={StaticResource DroppableToDropIntoParametersConverter}}" />
                                                                            </Style>
                                                                        </MenuItem.ItemContainerStyle>
                                                                    </MenuItem>
                                                                </ContextMenu>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </Grid>
                                    </GroupBox.Header>
                                    <ItemsControl Margin="20,10,-5,10" ItemsSource="{Binding Items}">
                                        <ItemsControl.Resources>
                                            <ResourceDictionary>
                                                <DataTemplate DataType="{x:Type seqItem:SequenceItem}">
                                                    <local:SequenceBlockView DataContext="{Binding}" />
                                                </DataTemplate>
                                            </ResourceDictionary>
                                        </ItemsControl.Resources>
                                    </ItemsControl>
                                </ninactrl:HitTestGroupBox>
                            </Grid>
                        </DockPanel>
                    </ninactrl:DetachingExpander.Content>
                </ninactrl:DetachingExpander>
            </DataTemplate>
        </ContentPresenter.ContentTemplate>
    </ContentPresenter>
</UserControl>